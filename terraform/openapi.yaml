openapi: "3.0.1"
info:
  title: "Fan Out Sample"
  description: Sample API with direct integration to SNS
  version: "0.0.1"
paths:
  /market/{market}/shops/{shop_id}/oders:
    post:
      parameters:
        - in: path
          name: market
          description: The Market where the order should be processed
          required: true
          schema:
            type: string
            enum: [eu, us, ru]
        - in: path
          name: shop_id
          required: true
          schema:
            type: string
          description: The shop ID to whom the oder should be processed
      responses:
        200:
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - api_key: []
      x-amazon-apigateway-request-validator: "full"
      x-amazon-apigateway-integration:
        credentials: ${fan_out_api_role}
        uri: ${oders_topic_uri}
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: "#set($inputRoot = $input.path('$'))\n{ }"
            contentHandling: "CONVERT_TO_TEXT"
        requestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        requestTemplates:
          application/json: "Action=Publish&TopicArn=$util.urlEncode('${orders_topic}')&Message=$util.urlEncode($input.body)&MessageAttributes.entry.1.Name=shop&MessageAttributes.entry.1.Value.DataType=String&MessageAttributes.entry.1.Value.StringValue=$input.params('shop_id')&MessageAttributes.entry.2.Name=market&MessageAttributes.entry.2.Value.DataType=String&MessageAttributes.entry.2.Value.StringValue=$input.params('market')"
        passthroughBehavior: "never"
        httpMethod: "POST"
        type: "aws"
components:
  schemas:
    Empty:
      title: "Empty Schema"
      type: "object"
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"
x-amazon-apigateway-request-validators:
  full:
    validateRequestParameters: true
    validateRequestBody: true
